{
  "ABIRoot": {
    "kind": "Root",
    "name": "TopLevel",
    "printedName": "TopLevel",
    "children": [
      {
        "kind": "Import",
        "name": "UIKit",
        "printedName": "UIKit",
        "declKind": "Import",
        "moduleName": "TAK",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "KeyInfo",
        "printedName": "KeyInfo",
        "children": [
          {
            "kind": "Var",
            "name": "alias",
            "printedName": "alias",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:3TAK7KeyInfoC5aliasSSvp",
            "mangledName": "$s3TAK7KeyInfoC5aliasSSvp",
            "moduleName": "TAK",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:3TAK7KeyInfoC5aliasSSvg",
                "mangledName": "$s3TAK7KeyInfoC5aliasSSvg",
                "moduleName": "TAK",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "algorithm",
            "printedName": "algorithm",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "KeyAlgorithm",
                "printedName": "TAK.KeyAlgorithm",
                "usr": "s:3TAK12KeyAlgorithmO"
              }
            ],
            "declKind": "Var",
            "usr": "s:3TAK7KeyInfoC9algorithmAA0B9AlgorithmOvp",
            "mangledName": "$s3TAK7KeyInfoC9algorithmAA0B9AlgorithmOvp",
            "moduleName": "TAK",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "KeyAlgorithm",
                    "printedName": "TAK.KeyAlgorithm",
                    "usr": "s:3TAK12KeyAlgorithmO"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:3TAK7KeyInfoC9algorithmAA0B9AlgorithmOvg",
                "mangledName": "$s3TAK7KeyInfoC9algorithmAA0B9AlgorithmOvg",
                "moduleName": "TAK",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "protectionLevel",
            "printedName": "protectionLevel",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "KeyProtectionLevel",
                "printedName": "TAK.KeyProtectionLevel",
                "usr": "s:3TAK18KeyProtectionLevelO"
              }
            ],
            "declKind": "Var",
            "usr": "s:3TAK7KeyInfoC15protectionLevelAA0b10ProtectionE0Ovp",
            "mangledName": "$s3TAK7KeyInfoC15protectionLevelAA0b10ProtectionE0Ovp",
            "moduleName": "TAK",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "KeyProtectionLevel",
                    "printedName": "TAK.KeyProtectionLevel",
                    "usr": "s:3TAK18KeyProtectionLevelO"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:3TAK7KeyInfoC15protectionLevelAA0b10ProtectionE0Ovg",
                "mangledName": "$s3TAK7KeyInfoC15protectionLevelAA0b10ProtectionE0Ovg",
                "moduleName": "TAK",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "KeyInfo",
                "printedName": "TAK.KeyInfo",
                "usr": "c:@M@TAK@objc(cs)KeyInfo"
              }
            ],
            "declKind": "Constructor",
            "usr": "c:@M@TAK@objc(cs)KeyInfo(im)init",
            "mangledName": "$s3TAK7KeyInfoCACycfc",
            "moduleName": "TAK",
            "overriding": true,
            "implicit": true,
            "objc_name": "init",
            "declAttributes": [
              "Dynamic",
              "ObjC",
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "c:@M@TAK@objc(cs)KeyInfo",
        "mangledName": "$s3TAK7KeyInfoC",
        "moduleName": "TAK",
        "declAttributes": [
          "AccessControl",
          "RawDocComment",
          "ObjC"
        ],
        "superclassUsr": "c:objc(cs)NSObject",
        "hasMissingDesignatedInitializers": true,
        "superclassNames": [
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "TAK",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "TAKCore",
        "printedName": "TAKCore",
        "declKind": "Import",
        "moduleName": "TAK"
      },
      {
        "kind": "TypeDecl",
        "name": "FileProtector",
        "printedName": "FileProtector",
        "children": [
          {
            "kind": "Function",
            "name": "encrypt",
            "printedName": "encrypt(plainData:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAK13FileProtectorC7encrypt9plainData10Foundation0F0VAH_tKF",
            "mangledName": "$s3TAK13FileProtectorC7encrypt9plainData10Foundation0F0VAH_tKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "decrypt",
            "printedName": "decrypt(encryptedData:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAK13FileProtectorC7decrypt13encryptedData10Foundation0F0VAH_tKF",
            "mangledName": "$s3TAK13FileProtectorC7decrypt13encryptedData10Foundation0F0VAH_tKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "decrypt",
            "printedName": "decrypt(fromFileNamed:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAK13FileProtectorC7decrypt04fromB5Named10Foundation4DataVSS_tKF",
            "mangledName": "$s3TAK13FileProtectorC7decrypt04fromB5Named10Foundation4DataVSS_tKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Class",
        "usr": "s:3TAK13FileProtectorC",
        "mangledName": "$s3TAK13FileProtectorC",
        "moduleName": "TAK",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "hasMissingDesignatedInitializers": true
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "TAK",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "TakTls",
        "printedName": "TakTls",
        "declKind": "Import",
        "moduleName": "TAK"
      },
      {
        "kind": "TypeDecl",
        "name": "DefaultTakTlsSocket",
        "printedName": "DefaultTakTlsSocket",
        "children": [
          {
            "kind": "Function",
            "name": "read",
            "printedName": "read()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAK19DefaultTakTlsSocketC4read10Foundation4DataVyKF",
            "mangledName": "$s3TAK19DefaultTakTlsSocketC4read10Foundation4DataVyKF",
            "moduleName": "TAK",
            "objc_name": "readAndReturnError:",
            "declAttributes": [
              "ObjC",
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "write",
            "printedName": "write(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAK19DefaultTakTlsSocketC5writeyy10Foundation4DataVKF",
            "mangledName": "$s3TAK19DefaultTakTlsSocketC5writeyy10Foundation4DataVKF",
            "moduleName": "TAK",
            "objc_name": "write:error:",
            "declAttributes": [
              "ObjC",
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "isOpen",
            "printedName": "isOpen()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAK19DefaultTakTlsSocketC6isOpenSbyF",
            "mangledName": "$s3TAK19DefaultTakTlsSocketC6isOpenSbyF",
            "moduleName": "TAK",
            "objc_name": "isOpen",
            "declAttributes": [
              "ObjC",
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "close",
            "printedName": "close()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAK19DefaultTakTlsSocketC5closeyyKF",
            "mangledName": "$s3TAK19DefaultTakTlsSocketC5closeyyKF",
            "moduleName": "TAK",
            "objc_name": "closeAndReturnError:",
            "declAttributes": [
              "ObjC",
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Class",
        "usr": "s:3TAK19DefaultTakTlsSocketC",
        "mangledName": "$s3TAK19DefaultTakTlsSocketC",
        "moduleName": "TAK",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "hasMissingDesignatedInitializers": true,
        "conformances": [
          {
            "kind": "Conformance",
            "name": "TakTlsSocket",
            "printedName": "TakTlsSocket",
            "usr": "c:@M@TakTls@objc(pl)TakTlsSocket",
            "mangledName": "$s6TakTls0aB6SocketP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "TAK",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "JailbreakStatus",
        "printedName": "JailbreakStatus",
        "children": [
          {
            "kind": "Var",
            "name": "notJailbroken",
            "printedName": "notJailbroken",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.JailbreakStatus.Type) -> TAK.JailbreakStatus",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "JailbreakStatus",
                    "printedName": "TAK.JailbreakStatus",
                    "usr": "s:3TAK15JailbreakStatusO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.JailbreakStatus.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "JailbreakStatus",
                        "printedName": "TAK.JailbreakStatus",
                        "usr": "s:3TAK15JailbreakStatusO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK15JailbreakStatusO13notJailbrokenyA2CmF",
            "mangledName": "$s3TAK15JailbreakStatusO13notJailbrokenyA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "maybeJailbroken",
            "printedName": "maybeJailbroken",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.JailbreakStatus.Type) -> TAK.JailbreakStatus",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "JailbreakStatus",
                    "printedName": "TAK.JailbreakStatus",
                    "usr": "s:3TAK15JailbreakStatusO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.JailbreakStatus.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "JailbreakStatus",
                        "printedName": "TAK.JailbreakStatus",
                        "usr": "s:3TAK15JailbreakStatusO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK15JailbreakStatusO15maybeJailbrokenyA2CmF",
            "mangledName": "$s3TAK15JailbreakStatusO15maybeJailbrokenyA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "likelyJailbroken",
            "printedName": "likelyJailbroken",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.JailbreakStatus.Type) -> TAK.JailbreakStatus",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "JailbreakStatus",
                    "printedName": "TAK.JailbreakStatus",
                    "usr": "s:3TAK15JailbreakStatusO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.JailbreakStatus.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "JailbreakStatus",
                        "printedName": "TAK.JailbreakStatus",
                        "usr": "s:3TAK15JailbreakStatusO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK15JailbreakStatusO16likelyJailbrokenyA2CmF",
            "mangledName": "$s3TAK15JailbreakStatusO16likelyJailbrokenyA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "jailbroken",
            "printedName": "jailbroken",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.JailbreakStatus.Type) -> TAK.JailbreakStatus",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "JailbreakStatus",
                    "printedName": "TAK.JailbreakStatus",
                    "usr": "s:3TAK15JailbreakStatusO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.JailbreakStatus.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "JailbreakStatus",
                        "printedName": "TAK.JailbreakStatus",
                        "usr": "s:3TAK15JailbreakStatusO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK15JailbreakStatusO10jailbrokenyA2CmF",
            "mangledName": "$s3TAK15JailbreakStatusO10jailbrokenyA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Function",
            "name": "==",
            "printedName": "==(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "JailbreakStatus",
                "printedName": "TAK.JailbreakStatus",
                "usr": "s:3TAK15JailbreakStatusO"
              },
              {
                "kind": "TypeNominal",
                "name": "JailbreakStatus",
                "printedName": "TAK.JailbreakStatus",
                "usr": "s:3TAK15JailbreakStatusO"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAK15JailbreakStatusO2eeoiySbAC_ACtFZ",
            "mangledName": "$s3TAK15JailbreakStatusO2eeoiySbAC_ACtFZ",
            "moduleName": "TAK",
            "static": true,
            "implicit": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Var",
            "name": "hashValue",
            "printedName": "hashValue",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:3TAK15JailbreakStatusO9hashValueSivp",
            "mangledName": "$s3TAK15JailbreakStatusO9hashValueSivp",
            "moduleName": "TAK",
            "implicit": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:3TAK15JailbreakStatusO9hashValueSivg",
                "mangledName": "$s3TAK15JailbreakStatusO9hashValueSivg",
                "moduleName": "TAK",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "hash",
            "printedName": "hash(into:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Hasher",
                "printedName": "Swift.Hasher",
                "paramValueOwnership": "InOut",
                "usr": "s:s6HasherV"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAK15JailbreakStatusO4hash4intoys6HasherVz_tF",
            "mangledName": "$s3TAK15JailbreakStatusO4hash4intoys6HasherVz_tF",
            "moduleName": "TAK",
            "implicit": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Enum",
        "usr": "s:3TAK15JailbreakStatusO",
        "mangledName": "$s3TAK15JailbreakStatusO",
        "moduleName": "TAK",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "TAKCore",
        "printedName": "TAKCore",
        "declKind": "Import",
        "moduleName": "TAK",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "TAK",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "TAKCore",
        "printedName": "TAKCore",
        "declKind": "Import",
        "moduleName": "TAK"
      },
      {
        "kind": "TypeDecl",
        "name": "TlsConnection",
        "printedName": "TlsConnection",
        "children": [
          {
            "kind": "Var",
            "name": "peerCertificate",
            "printedName": "peerCertificate",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:3TAK13TlsConnectionC15peerCertificateSSvp",
            "mangledName": "$s3TAK13TlsConnectionC15peerCertificateSSvp",
            "moduleName": "TAK",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:3TAK13TlsConnectionC15peerCertificateSSvg",
                "mangledName": "$s3TAK13TlsConnectionC15peerCertificateSSvg",
                "moduleName": "TAK",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "write",
            "printedName": "write(data:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAK13TlsConnectionC5write4datay10Foundation4DataV_tKF",
            "mangledName": "$s3TAK13TlsConnectionC5write4datay10Foundation4DataV_tKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "read",
            "printedName": "read()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAK13TlsConnectionC4read10Foundation4DataVyKF",
            "mangledName": "$s3TAK13TlsConnectionC4read10Foundation4DataVyKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "close",
            "printedName": "close()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAK13TlsConnectionC5closeyyKF",
            "mangledName": "$s3TAK13TlsConnectionC5closeyyKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "isOpen",
            "printedName": "isOpen()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAK13TlsConnectionC6isOpenSbyF",
            "mangledName": "$s3TAK13TlsConnectionC6isOpenSbyF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Class",
        "usr": "s:3TAK13TlsConnectionC",
        "mangledName": "$s3TAK13TlsConnectionC",
        "moduleName": "TAK",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "hasMissingDesignatedInitializers": true
      },
      {
        "kind": "Import",
        "name": "UIKit",
        "printedName": "UIKit",
        "declKind": "Import",
        "moduleName": "TAK",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "RegisterResponse",
        "printedName": "RegisterResponse",
        "children": [
          {
            "kind": "Var",
            "name": "takIdentifier",
            "printedName": "takIdentifier",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:3TAK16RegisterResponseC13takIdentifierSSvp",
            "mangledName": "$s3TAK16RegisterResponseC13takIdentifierSSvp",
            "moduleName": "TAK",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:3TAK16RegisterResponseC13takIdentifierSSvg",
                "mangledName": "$s3TAK16RegisterResponseC13takIdentifierSSvg",
                "moduleName": "TAK",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "isLicenseAboutToExpire",
            "printedName": "isLicenseAboutToExpire",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Var",
            "usr": "s:3TAK16RegisterResponseC22isLicenseAboutToExpireSbvp",
            "mangledName": "$s3TAK16RegisterResponseC22isLicenseAboutToExpireSbvp",
            "moduleName": "TAK",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:3TAK16RegisterResponseC22isLicenseAboutToExpireSbvg",
                "mangledName": "$s3TAK16RegisterResponseC22isLicenseAboutToExpireSbvg",
                "moduleName": "TAK",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "RegisterResponse",
                "printedName": "TAK.RegisterResponse",
                "usr": "c:@M@TAK@objc(cs)RegisterResponse"
              }
            ],
            "declKind": "Constructor",
            "usr": "c:@M@TAK@objc(cs)RegisterResponse(im)init",
            "mangledName": "$s3TAK16RegisterResponseCACycfc",
            "moduleName": "TAK",
            "overriding": true,
            "implicit": true,
            "objc_name": "init",
            "declAttributes": [
              "Dynamic",
              "ObjC",
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "c:@M@TAK@objc(cs)RegisterResponse",
        "mangledName": "$s3TAK16RegisterResponseC",
        "moduleName": "TAK",
        "declAttributes": [
          "AccessControl",
          "RawDocComment",
          "ObjC"
        ],
        "superclassUsr": "c:objc(cs)NSObject",
        "hasMissingDesignatedInitializers": true,
        "superclassNames": [
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "TAK",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "TAK",
        "printedName": "TAK",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(licenseFileName:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "TAK",
                "printedName": "TAK.TAK",
                "usr": "s:3TAKAAC"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:3TAKAAC15licenseFileNameABSS_tKcfc",
            "mangledName": "$s3TAKAAC15licenseFileNameABSS_tKcfc",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "getTakVersion",
            "printedName": "getTakVersion()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAKAAC13getTakVersionSSyKF",
            "mangledName": "$s3TAKAAC13getTakVersionSSyKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "getTakBuildNumber",
            "printedName": "getTakBuildNumber()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAKAAC17getTakBuildNumberSSyKF",
            "mangledName": "$s3TAKAAC17getTakBuildNumberSSyKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "isInitialized",
            "printedName": "isInitialized()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAKAAC13isInitializedSbyF",
            "mangledName": "$s3TAKAAC13isInitializedSbyF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "release",
            "printedName": "release()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAKAAC7releaseyyF",
            "mangledName": "$s3TAKAAC7releaseyyF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "register",
            "printedName": "register(userHash:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "RegisterResponse",
                "printedName": "TAK.RegisterResponse",
                "usr": "c:@M@TAK@objc(cs)RegisterResponse"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAKAAC8register8userHashAA16RegisterResponseCSSSg_tKF",
            "mangledName": "$s3TAKAAC8register8userHashAA16RegisterResponseCSSSg_tKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "checkIntegrity",
            "printedName": "checkIntegrity()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "CheckIntegrityResponse",
                "printedName": "TAK.CheckIntegrityResponse",
                "usr": "c:@M@TAK@objc(cs)CheckIntegrityResponse"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAKAAC14checkIntegrityAA05CheckC8ResponseCyKF",
            "mangledName": "$s3TAKAAC14checkIntegrityAA05CheckC8ResponseCyKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "generateSignature",
            "printedName": "generateSignature(input:signatureAlgorithm:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "SignatureAlgorithm",
                "printedName": "TAK.SignatureAlgorithm",
                "usr": "s:3TAK18SignatureAlgorithmO"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAKAAC17generateSignature5input18signatureAlgorithm10Foundation4DataVAH_AA0cF0OtKF",
            "mangledName": "$s3TAKAAC17generateSignature5input18signatureAlgorithm10Foundation4DataVAH_AA0cF0OtKF",
            "moduleName": "TAK",
            "deprecated": true,
            "declAttributes": [
              "AccessControl",
              "Available",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "generateSignatureWithDefaultKey",
            "printedName": "generateSignatureWithDefaultKey(input:signatureAlgorithm:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "SignatureAlgorithm",
                "printedName": "TAK.SignatureAlgorithm",
                "usr": "s:3TAK18SignatureAlgorithmO"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAKAAC31generateSignatureWithDefaultKey5input18signatureAlgorithm10Foundation4DataVAH_AA0cI0OtKF",
            "mangledName": "$s3TAKAAC31generateSignatureWithDefaultKey5input18signatureAlgorithm10Foundation4DataVAH_AA0cI0OtKF",
            "moduleName": "TAK",
            "deprecated": true,
            "declAttributes": [
              "AccessControl",
              "Available",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "sign",
            "printedName": "sign(keyAlias:signAlgorithm:hashType:input:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "SignatureAlgorithm",
                "printedName": "TAK.SignatureAlgorithm",
                "usr": "s:3TAK18SignatureAlgorithmO"
              },
              {
                "kind": "TypeNominal",
                "name": "HashType",
                "printedName": "TAK.HashType",
                "usr": "s:3TAK8HashTypeO"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAKAAC4sign8keyAlias0B9Algorithm8hashType5input10Foundation4DataVSS_AA09SignatureE0OAA04HashG0OAJtKF",
            "mangledName": "$s3TAKAAC4sign8keyAlias0B9Algorithm8hashType5input10Foundation4DataVSS_AA09SignatureE0OAA04HashG0OAJtKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "sign",
            "printedName": "sign(key:signAlgorithm:hashType:input:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "TakInternalKey",
                "printedName": "TAK.TakInternalKey",
                "usr": "s:3TAK14TakInternalKeyO"
              },
              {
                "kind": "TypeNominal",
                "name": "SignatureAlgorithm",
                "printedName": "TAK.SignatureAlgorithm",
                "usr": "s:3TAK18SignatureAlgorithmO"
              },
              {
                "kind": "TypeNominal",
                "name": "HashType",
                "printedName": "TAK.HashType",
                "usr": "s:3TAK8HashTypeO"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAKAAC4sign3key0B9Algorithm8hashType5input10Foundation4DataVAA14TakInternalKeyO_AA09SignatureD0OAA04HashF0OAJtKF",
            "mangledName": "$s3TAKAAC4sign3key0B9Algorithm8hashType5input10Foundation4DataVAA14TakInternalKeyO_AA09SignatureD0OAA04HashF0OAJtKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "hashAndSign",
            "printedName": "hashAndSign(keyAlias:signAlgorithm:hashType:input:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "SignatureAlgorithm",
                "printedName": "TAK.SignatureAlgorithm",
                "usr": "s:3TAK18SignatureAlgorithmO"
              },
              {
                "kind": "TypeNominal",
                "name": "HashType",
                "printedName": "TAK.HashType",
                "usr": "s:3TAK8HashTypeO"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAKAAC11hashAndSign8keyAlias13signAlgorithm0B4Type5input10Foundation4DataVSS_AA09SignatureH0OAA04HashI0OAJtKF",
            "mangledName": "$s3TAKAAC11hashAndSign8keyAlias13signAlgorithm0B4Type5input10Foundation4DataVSS_AA09SignatureH0OAA04HashI0OAJtKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "hashAndSign",
            "printedName": "hashAndSign(key:signAlgorithm:hashType:input:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "TakInternalKey",
                "printedName": "TAK.TakInternalKey",
                "usr": "s:3TAK14TakInternalKeyO"
              },
              {
                "kind": "TypeNominal",
                "name": "SignatureAlgorithm",
                "printedName": "TAK.SignatureAlgorithm",
                "usr": "s:3TAK18SignatureAlgorithmO"
              },
              {
                "kind": "TypeNominal",
                "name": "HashType",
                "printedName": "TAK.HashType",
                "usr": "s:3TAK8HashTypeO"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAKAAC11hashAndSign3key13signAlgorithm0B4Type5input10Foundation4DataVAA14TakInternalKeyO_AA09SignatureG0OAA04HashH0OAJtKF",
            "mangledName": "$s3TAKAAC11hashAndSign3key13signAlgorithm0B4Type5input10Foundation4DataVAA14TakInternalKeyO_AA09SignatureG0OAA04HashH0OAJtKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "encrypt",
            "printedName": "encrypt(keyAlias:encryptionAlgorithm:input:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "EncryptionOutput",
                "printedName": "TAK.EncryptionOutput",
                "usr": "c:@M@TAK@objc(cs)EncryptionOutput"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "EncryptionAlgorithm",
                "printedName": "TAK.EncryptionAlgorithm",
                "usr": "s:3TAK19EncryptionAlgorithmO"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAKAAC7encrypt8keyAlias19encryptionAlgorithm5inputAA16EncryptionOutputCSS_AA0hF0O10Foundation4DataVtKF",
            "mangledName": "$s3TAKAAC7encrypt8keyAlias19encryptionAlgorithm5inputAA16EncryptionOutputCSS_AA0hF0O10Foundation4DataVtKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "encrypt",
            "printedName": "encrypt(key:encryptionAlgorithm:input:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "EncryptionOutput",
                "printedName": "TAK.EncryptionOutput",
                "usr": "c:@M@TAK@objc(cs)EncryptionOutput"
              },
              {
                "kind": "TypeNominal",
                "name": "TakInternalKey",
                "printedName": "TAK.TakInternalKey",
                "usr": "s:3TAK14TakInternalKeyO"
              },
              {
                "kind": "TypeNominal",
                "name": "EncryptionAlgorithm",
                "printedName": "TAK.EncryptionAlgorithm",
                "usr": "s:3TAK19EncryptionAlgorithmO"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAKAAC7encrypt3key19encryptionAlgorithm5inputAA16EncryptionOutputCAA14TakInternalKeyO_AA0gE0O10Foundation4DataVtKF",
            "mangledName": "$s3TAKAAC7encrypt3key19encryptionAlgorithm5inputAA16EncryptionOutputCAA14TakInternalKeyO_AA0gE0O10Foundation4DataVtKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "decrypt",
            "printedName": "decrypt(keyAlias:encryptionAlgorithm:encryptionOutput:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "EncryptionAlgorithm",
                "printedName": "TAK.EncryptionAlgorithm",
                "usr": "s:3TAK19EncryptionAlgorithmO"
              },
              {
                "kind": "TypeNominal",
                "name": "EncryptionOutput",
                "printedName": "TAK.EncryptionOutput",
                "usr": "c:@M@TAK@objc(cs)EncryptionOutput"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAKAAC7decrypt8keyAlias19encryptionAlgorithm0E6Output10Foundation4DataVSS_AA010EncryptionF0OAA0jG0CtKF",
            "mangledName": "$s3TAKAAC7decrypt8keyAlias19encryptionAlgorithm0E6Output10Foundation4DataVSS_AA010EncryptionF0OAA0jG0CtKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "decrypt",
            "printedName": "decrypt(key:encryptionAlgorithm:encryptionOutput:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "TakInternalKey",
                "printedName": "TAK.TakInternalKey",
                "usr": "s:3TAK14TakInternalKeyO"
              },
              {
                "kind": "TypeNominal",
                "name": "EncryptionAlgorithm",
                "printedName": "TAK.EncryptionAlgorithm",
                "usr": "s:3TAK19EncryptionAlgorithmO"
              },
              {
                "kind": "TypeNominal",
                "name": "EncryptionOutput",
                "printedName": "TAK.EncryptionOutput",
                "usr": "c:@M@TAK@objc(cs)EncryptionOutput"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAKAAC7decrypt3key19encryptionAlgorithm0D6Output10Foundation4DataVAA14TakInternalKeyO_AA010EncryptionE0OAA0lF0CtKF",
            "mangledName": "$s3TAKAAC7decrypt3key19encryptionAlgorithm0D6Output10Foundation4DataVAA14TakInternalKeyO_AA010EncryptionE0OAA0lF0CtKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "generateRandom",
            "printedName": "generateRandom(numBytes:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "Int32",
                "printedName": "Swift.Int32",
                "usr": "s:s5Int32V"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAKAAC14generateRandom8numBytes10Foundation4DataVs5Int32V_tKF",
            "mangledName": "$s3TAKAAC14generateRandom8numBytes10Foundation4DataVs5Int32V_tKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "getTakIdentifier",
            "printedName": "getTakIdentifier()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAKAAC16getTakIdentifierSSyKF",
            "mangledName": "$s3TAKAAC16getTakIdentifierSSyKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "getClientCertificate",
            "printedName": "getClientCertificate()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAKAAC20getClientCertificateSSyKF",
            "mangledName": "$s3TAKAAC20getClientCertificateSSyKF",
            "moduleName": "TAK",
            "deprecated": true,
            "declAttributes": [
              "AccessControl",
              "Available",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "getCertificatePemFormat",
            "printedName": "getCertificatePemFormat(key:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "TakInternalKey",
                "printedName": "TAK.TakInternalKey",
                "usr": "s:3TAK14TakInternalKeyO"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAKAAC23getCertificatePemFormat3keySSAA14TakInternalKeyO_tKF",
            "mangledName": "$s3TAKAAC23getCertificatePemFormat3keySSAA14TakInternalKeyO_tKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "getKeyInfo",
            "printedName": "getKeyInfo(keyAlias:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "KeyInfo",
                "printedName": "TAK.KeyInfo",
                "usr": "c:@M@TAK@objc(cs)KeyInfo"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAKAAC10getKeyInfo8keyAliasAA0cD0CSS_tKF",
            "mangledName": "$s3TAKAAC10getKeyInfo8keyAliasAA0cD0CSS_tKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "getKeyInfo",
            "printedName": "getKeyInfo(key:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "KeyInfo",
                "printedName": "TAK.KeyInfo",
                "usr": "c:@M@TAK@objc(cs)KeyInfo"
              },
              {
                "kind": "TypeNominal",
                "name": "TakInternalKey",
                "printedName": "TAK.TakInternalKey",
                "usr": "s:3TAK14TakInternalKeyO"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAKAAC10getKeyInfo3keyAA0cD0CAA011TakInternalC0O_tKF",
            "mangledName": "$s3TAKAAC10getKeyInfo3keyAA0cD0CAA011TakInternalC0O_tKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "isRegistered",
            "printedName": "isRegistered()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAKAAC12isRegisteredSbyKF",
            "mangledName": "$s3TAKAAC12isRegisteredSbyKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "reset",
            "printedName": "reset()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAKAAC5resetyyKF",
            "mangledName": "$s3TAKAAC5resetyyKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "isJailbroken",
            "printedName": "isJailbroken()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAKAAC12isJailbrokenSbyF",
            "mangledName": "$s3TAKAAC12isJailbrokenSbyF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "getAdvancedJailbreakStatus",
            "printedName": "getAdvancedJailbreakStatus()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "TAK.JailbreakStatus?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "JailbreakStatus",
                    "printedName": "TAK.JailbreakStatus",
                    "usr": "s:3TAK15JailbreakStatusO"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAKAAC26getAdvancedJailbreakStatusAA0dE0OSgyKF",
            "mangledName": "$s3TAKAAC26getAdvancedJailbreakStatusAA0dE0OSgyKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "getSecureStorage",
            "printedName": "getSecureStorage(storageName:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "SecureStorage",
                "printedName": "TAK.SecureStorage",
                "usr": "s:3TAK13SecureStorageC"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAKAAC16getSecureStorage11storageNameAA0cD0CSS_tKF",
            "mangledName": "$s3TAKAAC16getSecureStorage11storageNameAA0cD0CSS_tKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "openTlsConnection",
            "printedName": "openTlsConnection(host:port:timeout:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "TlsConnection",
                "printedName": "TAK.TlsConnection",
                "usr": "s:3TAK13TlsConnectionC"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "hasDefaultArg": true,
                "usr": "s:Si"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAKAAC17openTlsConnection4host4port7timeoutAA0cD0CSS_S2itKF",
            "mangledName": "$s3TAKAAC17openTlsConnection4host4port7timeoutAA0cD0CSS_S2itKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "getFileProtector",
            "printedName": "getFileProtector()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "FileProtector",
                "printedName": "TAK.FileProtector",
                "usr": "s:3TAK13FileProtectorC"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAKAAC16getFileProtectorAA0cD0CyKF",
            "mangledName": "$s3TAKAAC16getFileProtectorAA0cD0CyKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "loadKey",
            "printedName": "loadKey(wrappedKey:keyAlias:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "WrappedKey",
                "printedName": "TAK.WrappedKey",
                "usr": "c:@M@TAK@objc(cs)WrappedKey"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAKAAC7loadKey07wrappedC08keyAliasyAA07WrappedC0C_SStKF",
            "mangledName": "$s3TAKAAC7loadKey07wrappedC08keyAliasyAA07WrappedC0C_SStKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "createRuntimeCheckThread",
            "printedName": "createRuntimeCheckThread(timeInterval:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Int32",
                "printedName": "Swift.Int32",
                "hasDefaultArg": true,
                "usr": "s:s5Int32V"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAKAAC24createRuntimeCheckThread12timeIntervalys5Int32V_tKF",
            "mangledName": "$s3TAKAAC24createRuntimeCheckThread12timeIntervalys5Int32V_tKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "stopRuntimeThread",
            "printedName": "stopRuntimeThread()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAKAAC17stopRuntimeThreadyyKF",
            "mangledName": "$s3TAKAAC17stopRuntimeThreadyyKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "isRuntimeThreadActive",
            "printedName": "isRuntimeThreadActive(relaunch:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAKAAC21isRuntimeThreadActive8relaunchS2b_tF",
            "mangledName": "$s3TAKAAC21isRuntimeThreadActive8relaunchS2b_tF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "keyGenerator",
            "printedName": "keyGenerator(keyAlias:keyAlgorithm:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "KeyAlgorithm",
                "printedName": "TAK.KeyAlgorithm",
                "usr": "s:3TAK12KeyAlgorithmO"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAKAAC12keyGenerator0B5Alias0B9AlgorithmySS_AA03KeyE0OtKF",
            "mangledName": "$s3TAKAAC12keyGenerator0B5Alias0B9AlgorithmySS_AA03KeyE0OtKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "getPublicKey",
            "printedName": "getPublicKey(keyAlias:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAKAAC12getPublicKey8keyAlias10Foundation4DataVSS_tKF",
            "mangledName": "$s3TAKAAC12getPublicKey8keyAlias10Foundation4DataVSS_tKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Class",
        "usr": "s:3TAKAAC",
        "mangledName": "$s3TAKAAC",
        "moduleName": "TAK",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "UIKit",
        "printedName": "UIKit",
        "declKind": "Import",
        "moduleName": "TAK",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "WrappedKey",
        "printedName": "WrappedKey",
        "children": [
          {
            "kind": "Var",
            "name": "wrappedKeyData",
            "printedName": "wrappedKeyData",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "EncryptionOutput",
                "printedName": "TAK.EncryptionOutput",
                "usr": "c:@M@TAK@objc(cs)EncryptionOutput"
              }
            ],
            "declKind": "Var",
            "usr": "s:3TAK10WrappedKeyC07wrappedC4DataAA16EncryptionOutputCvp",
            "mangledName": "$s3TAK10WrappedKeyC07wrappedC4DataAA16EncryptionOutputCvp",
            "moduleName": "TAK",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "EncryptionOutput",
                    "printedName": "TAK.EncryptionOutput",
                    "usr": "c:@M@TAK@objc(cs)EncryptionOutput"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:3TAK10WrappedKeyC07wrappedC4DataAA16EncryptionOutputCvg",
                "mangledName": "$s3TAK10WrappedKeyC07wrappedC4DataAA16EncryptionOutputCvg",
                "moduleName": "TAK",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "keyAlgorithm",
            "printedName": "keyAlgorithm",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "KeyAlgorithm",
                "printedName": "TAK.KeyAlgorithm",
                "usr": "s:3TAK12KeyAlgorithmO"
              }
            ],
            "declKind": "Var",
            "usr": "s:3TAK10WrappedKeyC12keyAlgorithmAA0cE0Ovp",
            "mangledName": "$s3TAK10WrappedKeyC12keyAlgorithmAA0cE0Ovp",
            "moduleName": "TAK",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "KeyAlgorithm",
                    "printedName": "TAK.KeyAlgorithm",
                    "usr": "s:3TAK12KeyAlgorithmO"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:3TAK10WrappedKeyC12keyAlgorithmAA0cE0Ovg",
                "mangledName": "$s3TAK10WrappedKeyC12keyAlgorithmAA0cE0Ovg",
                "moduleName": "TAK",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "wrappingAlgorithm",
            "printedName": "wrappingAlgorithm",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "WrappingAlgorithm",
                "printedName": "TAK.WrappingAlgorithm",
                "usr": "s:3TAK17WrappingAlgorithmO"
              }
            ],
            "declKind": "Var",
            "usr": "s:3TAK10WrappedKeyC17wrappingAlgorithmAA08WrappingE0Ovp",
            "mangledName": "$s3TAK10WrappedKeyC17wrappingAlgorithmAA08WrappingE0Ovp",
            "moduleName": "TAK",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "WrappingAlgorithm",
                    "printedName": "TAK.WrappingAlgorithm",
                    "usr": "s:3TAK17WrappingAlgorithmO"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:3TAK10WrappedKeyC17wrappingAlgorithmAA08WrappingE0Ovg",
                "mangledName": "$s3TAK10WrappedKeyC17wrappingAlgorithmAA08WrappingE0Ovg",
                "moduleName": "TAK",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "wrappingKeyAlias",
            "printedName": "wrappingKeyAlias",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:3TAK10WrappedKeyC08wrappingC5AliasSSvp",
            "mangledName": "$s3TAK10WrappedKeyC08wrappingC5AliasSSvp",
            "moduleName": "TAK",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:3TAK10WrappedKeyC08wrappingC5AliasSSvg",
                "mangledName": "$s3TAK10WrappedKeyC08wrappingC5AliasSSvg",
                "moduleName": "TAK",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(wrappedKeyData:keyAlgorithm:wrappingAlgorithm:wrappingKeyAlias:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "WrappedKey",
                "printedName": "TAK.WrappedKey",
                "usr": "c:@M@TAK@objc(cs)WrappedKey"
              },
              {
                "kind": "TypeNominal",
                "name": "EncryptionOutput",
                "printedName": "TAK.EncryptionOutput",
                "usr": "c:@M@TAK@objc(cs)EncryptionOutput"
              },
              {
                "kind": "TypeNominal",
                "name": "KeyAlgorithm",
                "printedName": "TAK.KeyAlgorithm",
                "usr": "s:3TAK12KeyAlgorithmO"
              },
              {
                "kind": "TypeNominal",
                "name": "WrappingAlgorithm",
                "printedName": "TAK.WrappingAlgorithm",
                "usr": "s:3TAK17WrappingAlgorithmO"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:3TAK10WrappedKeyC07wrappedC4Data12keyAlgorithm08wrappingG00hC5AliasAcA16EncryptionOutputC_AA0cG0OAA08WrappingG0OSStcfc",
            "mangledName": "$s3TAK10WrappedKeyC07wrappedC4Data12keyAlgorithm08wrappingG00hC5AliasAcA16EncryptionOutputC_AA0cG0OAA08WrappingG0OSStcfc",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "WrappedKey",
                "printedName": "TAK.WrappedKey",
                "usr": "c:@M@TAK@objc(cs)WrappedKey"
              }
            ],
            "declKind": "Constructor",
            "usr": "c:@M@TAK@objc(cs)WrappedKey(im)init",
            "mangledName": "$s3TAK10WrappedKeyCACycfc",
            "moduleName": "TAK",
            "overriding": true,
            "implicit": true,
            "objc_name": "init",
            "declAttributes": [
              "Dynamic",
              "ObjC",
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "c:@M@TAK@objc(cs)WrappedKey",
        "mangledName": "$s3TAK10WrappedKeyC",
        "moduleName": "TAK",
        "declAttributes": [
          "AccessControl",
          "RawDocComment",
          "ObjC"
        ],
        "superclassUsr": "c:objc(cs)NSObject",
        "superclassNames": [
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "TAK",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "TakTls",
        "printedName": "TakTls",
        "declKind": "Import",
        "moduleName": "TAK"
      },
      {
        "kind": "TypeDecl",
        "name": "DefaultTakTlsSocketFactory",
        "printedName": "DefaultTakTlsSocketFactory",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(tak:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "DefaultTakTlsSocketFactory",
                "printedName": "TAK.DefaultTakTlsSocketFactory",
                "usr": "s:3TAK26DefaultTakTlsSocketFactoryC"
              },
              {
                "kind": "TypeNominal",
                "name": "TAK",
                "printedName": "TAK.TAK",
                "usr": "s:3TAKAAC"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:3TAK26DefaultTakTlsSocketFactoryC3takAc2AC_tcfc",
            "mangledName": "$s3TAK26DefaultTakTlsSocketFactoryC3takAc2AC_tcfc",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "connect",
            "printedName": "connect(host:port:timeout:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "TakTlsSocket",
                "printedName": "TakTls.TakTlsSocket",
                "usr": "c:@M@TakTls@objc(pl)TakTlsSocket"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAK26DefaultTakTlsSocketFactoryC7connect4host4port7timeout0cD00cdE0_pSS_S2itKF",
            "mangledName": "$s3TAK26DefaultTakTlsSocketFactoryC7connect4host4port7timeout0cD00cdE0_pSS_S2itKF",
            "moduleName": "TAK",
            "objc_name": "connectWithHost:port:timeout:error:",
            "declAttributes": [
              "ObjC",
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Class",
        "usr": "s:3TAK26DefaultTakTlsSocketFactoryC",
        "mangledName": "$s3TAK26DefaultTakTlsSocketFactoryC",
        "moduleName": "TAK",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "TakTlsSocketFactory",
            "printedName": "TakTlsSocketFactory",
            "usr": "c:@M@TakTls@objc(pl)TakTlsSocketFactory",
            "mangledName": "$s6TakTls0aB13SocketFactoryP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "TAKCore",
        "printedName": "TAKCore",
        "declKind": "Import",
        "moduleName": "TAK",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "TakError",
        "printedName": "TakError",
        "children": [
          {
            "kind": "Var",
            "name": "invalidParameter",
            "printedName": "invalidParameter",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.TakError.Type) -> TAK.TakError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "TakError",
                    "printedName": "TAK.TakError",
                    "usr": "s:3TAK8TakErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.TakError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TakError",
                        "printedName": "TAK.TakError",
                        "usr": "s:3TAK8TakErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK8TakErrorO16invalidParameteryA2CmF",
            "mangledName": "$s3TAK8TakErrorO16invalidParameteryA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "notInitialized",
            "printedName": "notInitialized",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.TakError.Type) -> TAK.TakError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "TakError",
                    "printedName": "TAK.TakError",
                    "usr": "s:3TAK8TakErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.TakError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TakError",
                        "printedName": "TAK.TakError",
                        "usr": "s:3TAK8TakErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK8TakErrorO14notInitializedyA2CmF",
            "mangledName": "$s3TAK8TakErrorO14notInitializedyA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "alreadyRegistered",
            "printedName": "alreadyRegistered",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.TakError.Type) -> TAK.TakError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "TakError",
                    "printedName": "TAK.TakError",
                    "usr": "s:3TAK8TakErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.TakError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TakError",
                        "printedName": "TAK.TakError",
                        "usr": "s:3TAK8TakErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK8TakErrorO17alreadyRegisteredyA2CmF",
            "mangledName": "$s3TAK8TakErrorO17alreadyRegisteredyA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "licenseExpired",
            "printedName": "licenseExpired",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.TakError.Type) -> TAK.TakError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "TakError",
                    "printedName": "TAK.TakError",
                    "usr": "s:3TAK8TakErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.TakError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TakError",
                        "printedName": "TAK.TakError",
                        "usr": "s:3TAK8TakErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK8TakErrorO14licenseExpiredyA2CmF",
            "mangledName": "$s3TAK8TakErrorO14licenseExpiredyA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "networkTimeout",
            "printedName": "networkTimeout",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.TakError.Type) -> TAK.TakError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "TakError",
                    "printedName": "TAK.TakError",
                    "usr": "s:3TAK8TakErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.TakError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TakError",
                        "printedName": "TAK.TakError",
                        "usr": "s:3TAK8TakErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK8TakErrorO14networkTimeoutyA2CmF",
            "mangledName": "$s3TAK8TakErrorO14networkTimeoutyA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "networkError",
            "printedName": "networkError",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.TakError.Type) -> TAK.TakError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "TakError",
                    "printedName": "TAK.TakError",
                    "usr": "s:3TAK8TakErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.TakError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TakError",
                        "printedName": "TAK.TakError",
                        "usr": "s:3TAK8TakErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK8TakErrorO07networkC0yA2CmF",
            "mangledName": "$s3TAK8TakErrorO07networkC0yA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "deviceMismatch",
            "printedName": "deviceMismatch",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.TakError.Type) -> TAK.TakError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "TakError",
                    "printedName": "TAK.TakError",
                    "usr": "s:3TAK8TakErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.TakError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TakError",
                        "printedName": "TAK.TakError",
                        "usr": "s:3TAK8TakErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK8TakErrorO14deviceMismatchyA2CmF",
            "mangledName": "$s3TAK8TakErrorO14deviceMismatchyA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "certificateExpired",
            "printedName": "certificateExpired",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.TakError.Type) -> TAK.TakError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "TakError",
                    "printedName": "TAK.TakError",
                    "usr": "s:3TAK8TakErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.TakError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TakError",
                        "printedName": "TAK.TakError",
                        "usr": "s:3TAK8TakErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK8TakErrorO18certificateExpiredyA2CmF",
            "mangledName": "$s3TAK8TakErrorO18certificateExpiredyA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "notRegistered",
            "printedName": "notRegistered",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.TakError.Type) -> TAK.TakError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "TakError",
                    "printedName": "TAK.TakError",
                    "usr": "s:3TAK8TakErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.TakError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TakError",
                        "printedName": "TAK.TakError",
                        "usr": "s:3TAK8TakErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK8TakErrorO13notRegisteredyA2CmF",
            "mangledName": "$s3TAK8TakErrorO13notRegisteredyA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "instanceWiped",
            "printedName": "instanceWiped",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.TakError.Type) -> TAK.TakError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "TakError",
                    "printedName": "TAK.TakError",
                    "usr": "s:3TAK8TakErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.TakError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TakError",
                        "printedName": "TAK.TakError",
                        "usr": "s:3TAK8TakErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK8TakErrorO13instanceWipedyA2CmF",
            "mangledName": "$s3TAK8TakErrorO13instanceWipedyA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "instanceLocked",
            "printedName": "instanceLocked",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.TakError.Type) -> TAK.TakError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "TakError",
                    "printedName": "TAK.TakError",
                    "usr": "s:3TAK8TakErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.TakError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TakError",
                        "printedName": "TAK.TakError",
                        "usr": "s:3TAK8TakErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK8TakErrorO14instanceLockedyA2CmF",
            "mangledName": "$s3TAK8TakErrorO14instanceLockedyA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "general",
            "printedName": "general",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.TakError.Type) -> TAK.TakError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "TakError",
                    "printedName": "TAK.TakError",
                    "usr": "s:3TAK8TakErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.TakError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TakError",
                        "printedName": "TAK.TakError",
                        "usr": "s:3TAK8TakErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK8TakErrorO7generalyA2CmF",
            "mangledName": "$s3TAK8TakErrorO7generalyA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "invalidServerResponse",
            "printedName": "invalidServerResponse",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.TakError.Type) -> TAK.TakError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "TakError",
                    "printedName": "TAK.TakError",
                    "usr": "s:3TAK8TakErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.TakError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TakError",
                        "printedName": "TAK.TakError",
                        "usr": "s:3TAK8TakErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK8TakErrorO21invalidServerResponseyA2CmF",
            "mangledName": "$s3TAK8TakErrorO21invalidServerResponseyA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "notAvailable",
            "printedName": "notAvailable",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.TakError.Type) -> TAK.TakError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "TakError",
                    "printedName": "TAK.TakError",
                    "usr": "s:3TAK8TakErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.TakError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TakError",
                        "printedName": "TAK.TakError",
                        "usr": "s:3TAK8TakErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK8TakErrorO12notAvailableyA2CmF",
            "mangledName": "$s3TAK8TakErrorO12notAvailableyA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "validationFailed",
            "printedName": "validationFailed",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.TakError.Type) -> TAK.TakError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "TakError",
                    "printedName": "TAK.TakError",
                    "usr": "s:3TAK8TakErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.TakError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TakError",
                        "printedName": "TAK.TakError",
                        "usr": "s:3TAK8TakErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK8TakErrorO16validationFailedyA2CmF",
            "mangledName": "$s3TAK8TakErrorO16validationFailedyA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "updateFailed",
            "printedName": "updateFailed",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.TakError.Type) -> TAK.TakError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "TakError",
                    "printedName": "TAK.TakError",
                    "usr": "s:3TAK8TakErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.TakError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TakError",
                        "printedName": "TAK.TakError",
                        "usr": "s:3TAK8TakErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK8TakErrorO12updateFailedyA2CmF",
            "mangledName": "$s3TAK8TakErrorO12updateFailedyA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "noFingerprint",
            "printedName": "noFingerprint",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.TakError.Type) -> TAK.TakError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "TakError",
                    "printedName": "TAK.TakError",
                    "usr": "s:3TAK8TakErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.TakError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TakError",
                        "printedName": "TAK.TakError",
                        "usr": "s:3TAK8TakErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK8TakErrorO13noFingerprintyA2CmF",
            "mangledName": "$s3TAK8TakErrorO13noFingerprintyA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "certificateError",
            "printedName": "certificateError",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.TakError.Type) -> TAK.TakError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "TakError",
                    "printedName": "TAK.TakError",
                    "usr": "s:3TAK8TakErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.TakError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TakError",
                        "printedName": "TAK.TakError",
                        "usr": "s:3TAK8TakErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK8TakErrorO011certificateC0yA2CmF",
            "mangledName": "$s3TAK8TakErrorO011certificateC0yA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "wbcError",
            "printedName": "wbcError",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.TakError.Type) -> TAK.TakError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "TakError",
                    "printedName": "TAK.TakError",
                    "usr": "s:3TAK8TakErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.TakError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TakError",
                        "printedName": "TAK.TakError",
                        "usr": "s:3TAK8TakErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK8TakErrorO03wbcC0yA2CmF",
            "mangledName": "$s3TAK8TakErrorO03wbcC0yA2CmF",
            "moduleName": "TAK",
            "deprecated": true,
            "declAttributes": [
              "Available",
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "storageNotFound",
            "printedName": "storageNotFound",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.TakError.Type) -> TAK.TakError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "TakError",
                    "printedName": "TAK.TakError",
                    "usr": "s:3TAK8TakErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.TakError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TakError",
                        "printedName": "TAK.TakError",
                        "usr": "s:3TAK8TakErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK8TakErrorO15storageNotFoundyA2CmF",
            "mangledName": "$s3TAK8TakErrorO15storageNotFoundyA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "storageKeyNotFound",
            "printedName": "storageKeyNotFound",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.TakError.Type) -> TAK.TakError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "TakError",
                    "printedName": "TAK.TakError",
                    "usr": "s:3TAK8TakErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.TakError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TakError",
                        "printedName": "TAK.TakError",
                        "usr": "s:3TAK8TakErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK8TakErrorO18storageKeyNotFoundyA2CmF",
            "mangledName": "$s3TAK8TakErrorO18storageKeyNotFoundyA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "storageAlreadyExists",
            "printedName": "storageAlreadyExists",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.TakError.Type) -> TAK.TakError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "TakError",
                    "printedName": "TAK.TakError",
                    "usr": "s:3TAK8TakErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.TakError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TakError",
                        "printedName": "TAK.TakError",
                        "usr": "s:3TAK8TakErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK8TakErrorO20storageAlreadyExistsyA2CmF",
            "mangledName": "$s3TAK8TakErrorO20storageAlreadyExistsyA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Function",
            "name": "==",
            "printedName": "==(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "TakError",
                "printedName": "TAK.TakError",
                "usr": "s:3TAK8TakErrorO"
              },
              {
                "kind": "TypeNominal",
                "name": "TakError",
                "printedName": "TAK.TakError",
                "usr": "s:3TAK8TakErrorO"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAK8TakErrorO2eeoiySbAC_ACtFZ",
            "mangledName": "$s3TAK8TakErrorO2eeoiySbAC_ACtFZ",
            "moduleName": "TAK",
            "static": true,
            "implicit": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Var",
            "name": "hashValue",
            "printedName": "hashValue",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:3TAK8TakErrorO9hashValueSivp",
            "mangledName": "$s3TAK8TakErrorO9hashValueSivp",
            "moduleName": "TAK",
            "implicit": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:3TAK8TakErrorO9hashValueSivg",
                "mangledName": "$s3TAK8TakErrorO9hashValueSivg",
                "moduleName": "TAK",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "hash",
            "printedName": "hash(into:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Hasher",
                "printedName": "Swift.Hasher",
                "paramValueOwnership": "InOut",
                "usr": "s:s6HasherV"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAK8TakErrorO4hash4intoys6HasherVz_tF",
            "mangledName": "$s3TAK8TakErrorO4hash4intoys6HasherVz_tF",
            "moduleName": "TAK",
            "implicit": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Enum",
        "usr": "s:3TAK8TakErrorO",
        "mangledName": "$s3TAK8TakErrorO",
        "moduleName": "TAK",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "Error",
            "printedName": "Error",
            "usr": "s:s5ErrorP",
            "mangledName": "$ss5ErrorP"
          },
          {
            "kind": "Conformance",
            "name": "Sendable",
            "printedName": "Sendable",
            "usr": "s:s8SendableP",
            "mangledName": "$ss8SendableP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "TAK",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "WrappingAlgorithm",
        "printedName": "WrappingAlgorithm",
        "children": [
          {
            "kind": "Var",
            "name": "aesCbc",
            "printedName": "aesCbc",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.WrappingAlgorithm.Type) -> TAK.WrappingAlgorithm",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "WrappingAlgorithm",
                    "printedName": "TAK.WrappingAlgorithm",
                    "usr": "s:3TAK17WrappingAlgorithmO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.WrappingAlgorithm.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "WrappingAlgorithm",
                        "printedName": "TAK.WrappingAlgorithm",
                        "usr": "s:3TAK17WrappingAlgorithmO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK17WrappingAlgorithmO6aesCbcyA2CmF",
            "mangledName": "$s3TAK17WrappingAlgorithmO6aesCbcyA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Function",
            "name": "==",
            "printedName": "==(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "WrappingAlgorithm",
                "printedName": "TAK.WrappingAlgorithm",
                "usr": "s:3TAK17WrappingAlgorithmO"
              },
              {
                "kind": "TypeNominal",
                "name": "WrappingAlgorithm",
                "printedName": "TAK.WrappingAlgorithm",
                "usr": "s:3TAK17WrappingAlgorithmO"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAK17WrappingAlgorithmO2eeoiySbAC_ACtFZ",
            "mangledName": "$s3TAK17WrappingAlgorithmO2eeoiySbAC_ACtFZ",
            "moduleName": "TAK",
            "static": true,
            "implicit": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Var",
            "name": "hashValue",
            "printedName": "hashValue",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:3TAK17WrappingAlgorithmO9hashValueSivp",
            "mangledName": "$s3TAK17WrappingAlgorithmO9hashValueSivp",
            "moduleName": "TAK",
            "implicit": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:3TAK17WrappingAlgorithmO9hashValueSivg",
                "mangledName": "$s3TAK17WrappingAlgorithmO9hashValueSivg",
                "moduleName": "TAK",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "hash",
            "printedName": "hash(into:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Hasher",
                "printedName": "Swift.Hasher",
                "paramValueOwnership": "InOut",
                "usr": "s:s6HasherV"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAK17WrappingAlgorithmO4hash4intoys6HasherVz_tF",
            "mangledName": "$s3TAK17WrappingAlgorithmO4hash4intoys6HasherVz_tF",
            "moduleName": "TAK",
            "implicit": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Enum",
        "usr": "s:3TAK17WrappingAlgorithmO",
        "mangledName": "$s3TAK17WrappingAlgorithmO",
        "moduleName": "TAK",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "TAK",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "SignatureAlgorithm",
        "printedName": "SignatureAlgorithm",
        "children": [
          {
            "kind": "Var",
            "name": "rsaPkcs1v15",
            "printedName": "rsaPkcs1v15",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.SignatureAlgorithm.Type) -> TAK.SignatureAlgorithm",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SignatureAlgorithm",
                    "printedName": "TAK.SignatureAlgorithm",
                    "usr": "s:3TAK18SignatureAlgorithmO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.SignatureAlgorithm.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "SignatureAlgorithm",
                        "printedName": "TAK.SignatureAlgorithm",
                        "usr": "s:3TAK18SignatureAlgorithmO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK18SignatureAlgorithmO11rsaPkcs1v15yA2CmF",
            "mangledName": "$s3TAK18SignatureAlgorithmO11rsaPkcs1v15yA2CmF",
            "moduleName": "TAK",
            "deprecated": true,
            "declAttributes": [
              "Available",
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "ecdsa",
            "printedName": "ecdsa",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.SignatureAlgorithm.Type) -> TAK.SignatureAlgorithm",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SignatureAlgorithm",
                    "printedName": "TAK.SignatureAlgorithm",
                    "usr": "s:3TAK18SignatureAlgorithmO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.SignatureAlgorithm.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "SignatureAlgorithm",
                        "printedName": "TAK.SignatureAlgorithm",
                        "usr": "s:3TAK18SignatureAlgorithmO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK18SignatureAlgorithmO5ecdsayA2CmF",
            "mangledName": "$s3TAK18SignatureAlgorithmO5ecdsayA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "rsa2048",
            "printedName": "rsa2048",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.SignatureAlgorithm.Type) -> TAK.SignatureAlgorithm",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SignatureAlgorithm",
                    "printedName": "TAK.SignatureAlgorithm",
                    "usr": "s:3TAK18SignatureAlgorithmO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.SignatureAlgorithm.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "SignatureAlgorithm",
                        "printedName": "TAK.SignatureAlgorithm",
                        "usr": "s:3TAK18SignatureAlgorithmO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK18SignatureAlgorithmO7rsa2048yA2CmF",
            "mangledName": "$s3TAK18SignatureAlgorithmO7rsa2048yA2CmF",
            "moduleName": "TAK",
            "deprecated": true,
            "declAttributes": [
              "Available",
              "RawDocComment"
            ]
          },
          {
            "kind": "Function",
            "name": "==",
            "printedName": "==(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "SignatureAlgorithm",
                "printedName": "TAK.SignatureAlgorithm",
                "usr": "s:3TAK18SignatureAlgorithmO"
              },
              {
                "kind": "TypeNominal",
                "name": "SignatureAlgorithm",
                "printedName": "TAK.SignatureAlgorithm",
                "usr": "s:3TAK18SignatureAlgorithmO"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAK18SignatureAlgorithmO2eeoiySbAC_ACtFZ",
            "mangledName": "$s3TAK18SignatureAlgorithmO2eeoiySbAC_ACtFZ",
            "moduleName": "TAK",
            "static": true,
            "implicit": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Var",
            "name": "hashValue",
            "printedName": "hashValue",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:3TAK18SignatureAlgorithmO9hashValueSivp",
            "mangledName": "$s3TAK18SignatureAlgorithmO9hashValueSivp",
            "moduleName": "TAK",
            "implicit": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:3TAK18SignatureAlgorithmO9hashValueSivg",
                "mangledName": "$s3TAK18SignatureAlgorithmO9hashValueSivg",
                "moduleName": "TAK",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "hash",
            "printedName": "hash(into:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Hasher",
                "printedName": "Swift.Hasher",
                "paramValueOwnership": "InOut",
                "usr": "s:s6HasherV"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAK18SignatureAlgorithmO4hash4intoys6HasherVz_tF",
            "mangledName": "$s3TAK18SignatureAlgorithmO4hash4intoys6HasherVz_tF",
            "moduleName": "TAK",
            "implicit": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Enum",
        "usr": "s:3TAK18SignatureAlgorithmO",
        "mangledName": "$s3TAK18SignatureAlgorithmO",
        "moduleName": "TAK",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "TAK",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "EncryptionAlgorithm",
        "printedName": "EncryptionAlgorithm",
        "children": [
          {
            "kind": "Var",
            "name": "aesGcm",
            "printedName": "aesGcm",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.EncryptionAlgorithm.Type) -> TAK.EncryptionAlgorithm",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "EncryptionAlgorithm",
                    "printedName": "TAK.EncryptionAlgorithm",
                    "usr": "s:3TAK19EncryptionAlgorithmO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.EncryptionAlgorithm.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "EncryptionAlgorithm",
                        "printedName": "TAK.EncryptionAlgorithm",
                        "usr": "s:3TAK19EncryptionAlgorithmO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK19EncryptionAlgorithmO6aesGcmyA2CmF",
            "mangledName": "$s3TAK19EncryptionAlgorithmO6aesGcmyA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "aesEcb",
            "printedName": "aesEcb",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.EncryptionAlgorithm.Type) -> TAK.EncryptionAlgorithm",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "EncryptionAlgorithm",
                    "printedName": "TAK.EncryptionAlgorithm",
                    "usr": "s:3TAK19EncryptionAlgorithmO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.EncryptionAlgorithm.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "EncryptionAlgorithm",
                        "printedName": "TAK.EncryptionAlgorithm",
                        "usr": "s:3TAK19EncryptionAlgorithmO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK19EncryptionAlgorithmO6aesEcbyA2CmF",
            "mangledName": "$s3TAK19EncryptionAlgorithmO6aesEcbyA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "ecies",
            "printedName": "ecies",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.EncryptionAlgorithm.Type) -> TAK.EncryptionAlgorithm",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "EncryptionAlgorithm",
                    "printedName": "TAK.EncryptionAlgorithm",
                    "usr": "s:3TAK19EncryptionAlgorithmO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.EncryptionAlgorithm.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "EncryptionAlgorithm",
                        "printedName": "TAK.EncryptionAlgorithm",
                        "usr": "s:3TAK19EncryptionAlgorithmO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK19EncryptionAlgorithmO5eciesyA2CmF",
            "mangledName": "$s3TAK19EncryptionAlgorithmO5eciesyA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Function",
            "name": "==",
            "printedName": "==(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "EncryptionAlgorithm",
                "printedName": "TAK.EncryptionAlgorithm",
                "usr": "s:3TAK19EncryptionAlgorithmO"
              },
              {
                "kind": "TypeNominal",
                "name": "EncryptionAlgorithm",
                "printedName": "TAK.EncryptionAlgorithm",
                "usr": "s:3TAK19EncryptionAlgorithmO"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAK19EncryptionAlgorithmO2eeoiySbAC_ACtFZ",
            "mangledName": "$s3TAK19EncryptionAlgorithmO2eeoiySbAC_ACtFZ",
            "moduleName": "TAK",
            "static": true,
            "implicit": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Var",
            "name": "hashValue",
            "printedName": "hashValue",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:3TAK19EncryptionAlgorithmO9hashValueSivp",
            "mangledName": "$s3TAK19EncryptionAlgorithmO9hashValueSivp",
            "moduleName": "TAK",
            "implicit": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:3TAK19EncryptionAlgorithmO9hashValueSivg",
                "mangledName": "$s3TAK19EncryptionAlgorithmO9hashValueSivg",
                "moduleName": "TAK",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "hash",
            "printedName": "hash(into:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Hasher",
                "printedName": "Swift.Hasher",
                "paramValueOwnership": "InOut",
                "usr": "s:s6HasherV"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAK19EncryptionAlgorithmO4hash4intoys6HasherVz_tF",
            "mangledName": "$s3TAK19EncryptionAlgorithmO4hash4intoys6HasherVz_tF",
            "moduleName": "TAK",
            "implicit": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Enum",
        "usr": "s:3TAK19EncryptionAlgorithmO",
        "mangledName": "$s3TAK19EncryptionAlgorithmO",
        "moduleName": "TAK",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "UIKit",
        "printedName": "UIKit",
        "declKind": "Import",
        "moduleName": "TAK",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "CheckIntegrityResponse",
        "printedName": "CheckIntegrityResponse",
        "children": [
          {
            "kind": "Var",
            "name": "takIdentifier",
            "printedName": "takIdentifier",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:3TAK22CheckIntegrityResponseC13takIdentifierSSvp",
            "mangledName": "$s3TAK22CheckIntegrityResponseC13takIdentifierSSvp",
            "moduleName": "TAK",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:3TAK22CheckIntegrityResponseC13takIdentifierSSvg",
                "mangledName": "$s3TAK22CheckIntegrityResponseC13takIdentifierSSvg",
                "moduleName": "TAK",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "didReregister",
            "printedName": "didReregister",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Var",
            "usr": "s:3TAK22CheckIntegrityResponseC13didReregisterSbvp",
            "mangledName": "$s3TAK22CheckIntegrityResponseC13didReregisterSbvp",
            "moduleName": "TAK",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:3TAK22CheckIntegrityResponseC13didReregisterSbvg",
                "mangledName": "$s3TAK22CheckIntegrityResponseC13didReregisterSbvg",
                "moduleName": "TAK",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "isLicenseAboutToExpire",
            "printedName": "isLicenseAboutToExpire",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Var",
            "usr": "s:3TAK22CheckIntegrityResponseC22isLicenseAboutToExpireSbvp",
            "mangledName": "$s3TAK22CheckIntegrityResponseC22isLicenseAboutToExpireSbvp",
            "moduleName": "TAK",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:3TAK22CheckIntegrityResponseC22isLicenseAboutToExpireSbvg",
                "mangledName": "$s3TAK22CheckIntegrityResponseC22isLicenseAboutToExpireSbvg",
                "moduleName": "TAK",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "CheckIntegrityResponse",
                "printedName": "TAK.CheckIntegrityResponse",
                "usr": "c:@M@TAK@objc(cs)CheckIntegrityResponse"
              }
            ],
            "declKind": "Constructor",
            "usr": "c:@M@TAK@objc(cs)CheckIntegrityResponse(im)init",
            "mangledName": "$s3TAK22CheckIntegrityResponseCACycfc",
            "moduleName": "TAK",
            "overriding": true,
            "implicit": true,
            "objc_name": "init",
            "declAttributes": [
              "Dynamic",
              "ObjC",
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "c:@M@TAK@objc(cs)CheckIntegrityResponse",
        "mangledName": "$s3TAK22CheckIntegrityResponseC",
        "moduleName": "TAK",
        "declAttributes": [
          "AccessControl",
          "RawDocComment",
          "ObjC"
        ],
        "superclassUsr": "c:objc(cs)NSObject",
        "hasMissingDesignatedInitializers": true,
        "superclassNames": [
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "TAKCore",
        "printedName": "TAKCore",
        "declKind": "Import",
        "moduleName": "TAK",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "SecureStorage",
        "printedName": "SecureStorage",
        "children": [
          {
            "kind": "Function",
            "name": "write",
            "printedName": "write(key:value:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAK13SecureStorageC5write3key5valueySS_10Foundation4DataVtKF",
            "mangledName": "$s3TAK13SecureStorageC5write3key5valueySS_10Foundation4DataVtKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "write",
            "printedName": "write(key:value:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAK13SecureStorageC5write3key5valueySS_SStKF",
            "mangledName": "$s3TAK13SecureStorageC5write3key5valueySS_SStKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "write",
            "printedName": "write(key:value:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAK13SecureStorageC5write3key5valueySS_SitKF",
            "mangledName": "$s3TAK13SecureStorageC5write3key5valueySS_SitKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "write",
            "printedName": "write(key:value:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAK13SecureStorageC5write3key5valueySS_SbtKF",
            "mangledName": "$s3TAK13SecureStorageC5write3key5valueySS_SbtKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "read",
            "printedName": "read(key:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAK13SecureStorageC4read3key10Foundation4DataVSS_tKF",
            "mangledName": "$s3TAK13SecureStorageC4read3key10Foundation4DataVSS_tKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "read",
            "printedName": "read(key:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAK13SecureStorageC4read3keyS2S_tKF",
            "mangledName": "$s3TAK13SecureStorageC4read3keyS2S_tKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "read",
            "printedName": "read(key:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAK13SecureStorageC4read3keySiSS_tKF",
            "mangledName": "$s3TAK13SecureStorageC4read3keySiSS_tKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "read",
            "printedName": "read(key:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAK13SecureStorageC4read3keySbSS_tKF",
            "mangledName": "$s3TAK13SecureStorageC4read3keySbSS_tKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "deleteEntry",
            "printedName": "deleteEntry(key:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAK13SecureStorageC11deleteEntry3keyySS_tKF",
            "mangledName": "$s3TAK13SecureStorageC11deleteEntry3keyySS_tKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "delete",
            "printedName": "delete()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAK13SecureStorageC6deleteyyKF",
            "mangledName": "$s3TAK13SecureStorageC6deleteyyKF",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Class",
        "usr": "s:3TAK13SecureStorageC",
        "mangledName": "$s3TAK13SecureStorageC",
        "moduleName": "TAK",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "hasMissingDesignatedInitializers": true
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "TAK",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "TakInternalKey",
        "printedName": "TakInternalKey",
        "children": [
          {
            "kind": "Var",
            "name": "defaultClientPrivateKey",
            "printedName": "defaultClientPrivateKey",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.TakInternalKey.Type) -> TAK.TakInternalKey",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "TakInternalKey",
                    "printedName": "TAK.TakInternalKey",
                    "usr": "s:3TAK14TakInternalKeyO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.TakInternalKey.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TakInternalKey",
                        "printedName": "TAK.TakInternalKey",
                        "usr": "s:3TAK14TakInternalKeyO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK14TakInternalKeyO020defaultClientPrivateD0yA2CmF",
            "mangledName": "$s3TAK14TakInternalKeyO020defaultClientPrivateD0yA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "individualClientPrivateKey",
            "printedName": "individualClientPrivateKey",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.TakInternalKey.Type) -> TAK.TakInternalKey",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "TakInternalKey",
                    "printedName": "TAK.TakInternalKey",
                    "usr": "s:3TAK14TakInternalKeyO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.TakInternalKey.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TakInternalKey",
                        "printedName": "TAK.TakInternalKey",
                        "usr": "s:3TAK14TakInternalKeyO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK14TakInternalKeyO023individualClientPrivateD0yA2CmF",
            "mangledName": "$s3TAK14TakInternalKeyO023individualClientPrivateD0yA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "defaultEncryptionKey",
            "printedName": "defaultEncryptionKey",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.TakInternalKey.Type) -> TAK.TakInternalKey",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "TakInternalKey",
                    "printedName": "TAK.TakInternalKey",
                    "usr": "s:3TAK14TakInternalKeyO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.TakInternalKey.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TakInternalKey",
                        "printedName": "TAK.TakInternalKey",
                        "usr": "s:3TAK14TakInternalKeyO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK14TakInternalKeyO017defaultEncryptionD0yA2CmF",
            "mangledName": "$s3TAK14TakInternalKeyO017defaultEncryptionD0yA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "individualEncryptionKey",
            "printedName": "individualEncryptionKey",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.TakInternalKey.Type) -> TAK.TakInternalKey",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "TakInternalKey",
                    "printedName": "TAK.TakInternalKey",
                    "usr": "s:3TAK14TakInternalKeyO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.TakInternalKey.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TakInternalKey",
                        "printedName": "TAK.TakInternalKey",
                        "usr": "s:3TAK14TakInternalKeyO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK14TakInternalKeyO020individualEncryptionD0yA2CmF",
            "mangledName": "$s3TAK14TakInternalKeyO020individualEncryptionD0yA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Function",
            "name": "==",
            "printedName": "==(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "TakInternalKey",
                "printedName": "TAK.TakInternalKey",
                "usr": "s:3TAK14TakInternalKeyO"
              },
              {
                "kind": "TypeNominal",
                "name": "TakInternalKey",
                "printedName": "TAK.TakInternalKey",
                "usr": "s:3TAK14TakInternalKeyO"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAK14TakInternalKeyO2eeoiySbAC_ACtFZ",
            "mangledName": "$s3TAK14TakInternalKeyO2eeoiySbAC_ACtFZ",
            "moduleName": "TAK",
            "static": true,
            "implicit": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Var",
            "name": "hashValue",
            "printedName": "hashValue",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:3TAK14TakInternalKeyO9hashValueSivp",
            "mangledName": "$s3TAK14TakInternalKeyO9hashValueSivp",
            "moduleName": "TAK",
            "implicit": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:3TAK14TakInternalKeyO9hashValueSivg",
                "mangledName": "$s3TAK14TakInternalKeyO9hashValueSivg",
                "moduleName": "TAK",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "hash",
            "printedName": "hash(into:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Hasher",
                "printedName": "Swift.Hasher",
                "paramValueOwnership": "InOut",
                "usr": "s:s6HasherV"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAK14TakInternalKeyO4hash4intoys6HasherVz_tF",
            "mangledName": "$s3TAK14TakInternalKeyO4hash4intoys6HasherVz_tF",
            "moduleName": "TAK",
            "implicit": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Enum",
        "usr": "s:3TAK14TakInternalKeyO",
        "mangledName": "$s3TAK14TakInternalKeyO",
        "moduleName": "TAK",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "TAK",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "TAKCore",
        "printedName": "TAKCore",
        "declKind": "Import",
        "moduleName": "TAK"
      },
      {
        "kind": "Import",
        "name": "UIKit",
        "printedName": "UIKit",
        "declKind": "Import",
        "moduleName": "TAK",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "EncryptionOutput",
        "printedName": "EncryptionOutput",
        "children": [
          {
            "kind": "Var",
            "name": "iv",
            "printedName": "iv",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Foundation.Data?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Data",
                    "printedName": "Foundation.Data",
                    "usr": "s:10Foundation4DataV"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:3TAK16EncryptionOutputC2iv10Foundation4DataVSgvp",
            "mangledName": "$s3TAK16EncryptionOutputC2iv10Foundation4DataVSgvp",
            "moduleName": "TAK",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "Foundation.Data?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Data",
                        "printedName": "Foundation.Data",
                        "usr": "s:10Foundation4DataV"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:3TAK16EncryptionOutputC2iv10Foundation4DataVSgvg",
                "mangledName": "$s3TAK16EncryptionOutputC2iv10Foundation4DataVSgvg",
                "moduleName": "TAK",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "aad",
            "printedName": "aad",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Foundation.Data?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Data",
                    "printedName": "Foundation.Data",
                    "usr": "s:10Foundation4DataV"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:3TAK16EncryptionOutputC3aad10Foundation4DataVSgvp",
            "mangledName": "$s3TAK16EncryptionOutputC3aad10Foundation4DataVSgvp",
            "moduleName": "TAK",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "Foundation.Data?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Data",
                        "printedName": "Foundation.Data",
                        "usr": "s:10Foundation4DataV"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:3TAK16EncryptionOutputC3aad10Foundation4DataVSgvg",
                "mangledName": "$s3TAK16EncryptionOutputC3aad10Foundation4DataVSgvg",
                "moduleName": "TAK",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "tag",
            "printedName": "tag",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Foundation.Data?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Data",
                    "printedName": "Foundation.Data",
                    "usr": "s:10Foundation4DataV"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:3TAK16EncryptionOutputC3tag10Foundation4DataVSgvp",
            "mangledName": "$s3TAK16EncryptionOutputC3tag10Foundation4DataVSgvp",
            "moduleName": "TAK",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "Foundation.Data?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Data",
                        "printedName": "Foundation.Data",
                        "usr": "s:10Foundation4DataV"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:3TAK16EncryptionOutputC3tag10Foundation4DataVSgvg",
                "mangledName": "$s3TAK16EncryptionOutputC3tag10Foundation4DataVSgvg",
                "moduleName": "TAK",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "ephemeralKey",
            "printedName": "ephemeralKey",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Foundation.Data?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Data",
                    "printedName": "Foundation.Data",
                    "usr": "s:10Foundation4DataV"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:3TAK16EncryptionOutputC12ephemeralKey10Foundation4DataVSgvp",
            "mangledName": "$s3TAK16EncryptionOutputC12ephemeralKey10Foundation4DataVSgvp",
            "moduleName": "TAK",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "Foundation.Data?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Data",
                        "printedName": "Foundation.Data",
                        "usr": "s:10Foundation4DataV"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:3TAK16EncryptionOutputC12ephemeralKey10Foundation4DataVSgvg",
                "mangledName": "$s3TAK16EncryptionOutputC12ephemeralKey10Foundation4DataVSgvg",
                "moduleName": "TAK",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "ciphertext",
            "printedName": "ciphertext",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Var",
            "usr": "s:3TAK16EncryptionOutputC10ciphertext10Foundation4DataVvp",
            "mangledName": "$s3TAK16EncryptionOutputC10ciphertext10Foundation4DataVvp",
            "moduleName": "TAK",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Data",
                    "printedName": "Foundation.Data",
                    "usr": "s:10Foundation4DataV"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:3TAK16EncryptionOutputC10ciphertext10Foundation4DataVvg",
                "mangledName": "$s3TAK16EncryptionOutputC10ciphertext10Foundation4DataVvg",
                "moduleName": "TAK",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(iv:aad:tag:ephemeralKey:ciphertext:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "EncryptionOutput",
                "printedName": "TAK.EncryptionOutput",
                "usr": "c:@M@TAK@objc(cs)EncryptionOutput"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Foundation.Data?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Data",
                    "printedName": "Foundation.Data",
                    "usr": "s:10Foundation4DataV"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Foundation.Data?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Data",
                    "printedName": "Foundation.Data",
                    "usr": "s:10Foundation4DataV"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Foundation.Data?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Data",
                    "printedName": "Foundation.Data",
                    "usr": "s:10Foundation4DataV"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Foundation.Data?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Data",
                    "printedName": "Foundation.Data",
                    "usr": "s:10Foundation4DataV"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:3TAK16EncryptionOutputC2iv3aad3tag12ephemeralKey10ciphertextAC10Foundation4DataVSg_A3lKtcfc",
            "mangledName": "$s3TAK16EncryptionOutputC2iv3aad3tag12ephemeralKey10ciphertextAC10Foundation4DataVSg_A3lKtcfc",
            "moduleName": "TAK",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "EncryptionOutput",
                "printedName": "TAK.EncryptionOutput",
                "usr": "c:@M@TAK@objc(cs)EncryptionOutput"
              }
            ],
            "declKind": "Constructor",
            "usr": "c:@M@TAK@objc(cs)EncryptionOutput(im)init",
            "mangledName": "$s3TAK16EncryptionOutputCACycfc",
            "moduleName": "TAK",
            "overriding": true,
            "implicit": true,
            "objc_name": "init",
            "declAttributes": [
              "Dynamic",
              "ObjC",
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "c:@M@TAK@objc(cs)EncryptionOutput",
        "mangledName": "$s3TAK16EncryptionOutputC",
        "moduleName": "TAK",
        "declAttributes": [
          "AccessControl",
          "RawDocComment",
          "ObjC"
        ],
        "superclassUsr": "c:objc(cs)NSObject",
        "superclassNames": [
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "TAK",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "KeyProtectionLevel",
        "printedName": "KeyProtectionLevel",
        "children": [
          {
            "kind": "Var",
            "name": "wbcExportedObject",
            "printedName": "wbcExportedObject",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.KeyProtectionLevel.Type) -> TAK.KeyProtectionLevel",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "KeyProtectionLevel",
                    "printedName": "TAK.KeyProtectionLevel",
                    "usr": "s:3TAK18KeyProtectionLevelO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.KeyProtectionLevel.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "KeyProtectionLevel",
                        "printedName": "TAK.KeyProtectionLevel",
                        "usr": "s:3TAK18KeyProtectionLevelO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK18KeyProtectionLevelO17wbcExportedObjectyA2CmF",
            "mangledName": "$s3TAK18KeyProtectionLevelO17wbcExportedObjectyA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "wbcCommonObject",
            "printedName": "wbcCommonObject",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.KeyProtectionLevel.Type) -> TAK.KeyProtectionLevel",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "KeyProtectionLevel",
                    "printedName": "TAK.KeyProtectionLevel",
                    "usr": "s:3TAK18KeyProtectionLevelO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.KeyProtectionLevel.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "KeyProtectionLevel",
                        "printedName": "TAK.KeyProtectionLevel",
                        "usr": "s:3TAK18KeyProtectionLevelO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK18KeyProtectionLevelO15wbcCommonObjectyA2CmF",
            "mangledName": "$s3TAK18KeyProtectionLevelO15wbcCommonObjectyA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "secureEnclave",
            "printedName": "secureEnclave",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.KeyProtectionLevel.Type) -> TAK.KeyProtectionLevel",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "KeyProtectionLevel",
                    "printedName": "TAK.KeyProtectionLevel",
                    "usr": "s:3TAK18KeyProtectionLevelO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.KeyProtectionLevel.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "KeyProtectionLevel",
                        "printedName": "TAK.KeyProtectionLevel",
                        "usr": "s:3TAK18KeyProtectionLevelO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK18KeyProtectionLevelO13secureEnclaveyA2CmF",
            "mangledName": "$s3TAK18KeyProtectionLevelO13secureEnclaveyA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Function",
            "name": "==",
            "printedName": "==(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "KeyProtectionLevel",
                "printedName": "TAK.KeyProtectionLevel",
                "usr": "s:3TAK18KeyProtectionLevelO"
              },
              {
                "kind": "TypeNominal",
                "name": "KeyProtectionLevel",
                "printedName": "TAK.KeyProtectionLevel",
                "usr": "s:3TAK18KeyProtectionLevelO"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAK18KeyProtectionLevelO2eeoiySbAC_ACtFZ",
            "mangledName": "$s3TAK18KeyProtectionLevelO2eeoiySbAC_ACtFZ",
            "moduleName": "TAK",
            "static": true,
            "implicit": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Var",
            "name": "hashValue",
            "printedName": "hashValue",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:3TAK18KeyProtectionLevelO9hashValueSivp",
            "mangledName": "$s3TAK18KeyProtectionLevelO9hashValueSivp",
            "moduleName": "TAK",
            "implicit": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:3TAK18KeyProtectionLevelO9hashValueSivg",
                "mangledName": "$s3TAK18KeyProtectionLevelO9hashValueSivg",
                "moduleName": "TAK",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "hash",
            "printedName": "hash(into:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Hasher",
                "printedName": "Swift.Hasher",
                "paramValueOwnership": "InOut",
                "usr": "s:s6HasherV"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAK18KeyProtectionLevelO4hash4intoys6HasherVz_tF",
            "mangledName": "$s3TAK18KeyProtectionLevelO4hash4intoys6HasherVz_tF",
            "moduleName": "TAK",
            "implicit": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Enum",
        "usr": "s:3TAK18KeyProtectionLevelO",
        "mangledName": "$s3TAK18KeyProtectionLevelO",
        "moduleName": "TAK",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "TAK",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "KeyAlgorithm",
        "printedName": "KeyAlgorithm",
        "children": [
          {
            "kind": "Var",
            "name": "aes256",
            "printedName": "aes256",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.KeyAlgorithm.Type) -> TAK.KeyAlgorithm",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "KeyAlgorithm",
                    "printedName": "TAK.KeyAlgorithm",
                    "usr": "s:3TAK12KeyAlgorithmO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.KeyAlgorithm.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "KeyAlgorithm",
                        "printedName": "TAK.KeyAlgorithm",
                        "usr": "s:3TAK12KeyAlgorithmO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK12KeyAlgorithmO6aes256yA2CmF",
            "mangledName": "$s3TAK12KeyAlgorithmO6aes256yA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "rsa2048",
            "printedName": "rsa2048",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.KeyAlgorithm.Type) -> TAK.KeyAlgorithm",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "KeyAlgorithm",
                    "printedName": "TAK.KeyAlgorithm",
                    "usr": "s:3TAK12KeyAlgorithmO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.KeyAlgorithm.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "KeyAlgorithm",
                        "printedName": "TAK.KeyAlgorithm",
                        "usr": "s:3TAK12KeyAlgorithmO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK12KeyAlgorithmO7rsa2048yA2CmF",
            "mangledName": "$s3TAK12KeyAlgorithmO7rsa2048yA2CmF",
            "moduleName": "TAK",
            "deprecated": true,
            "declAttributes": [
              "Available",
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "ecSecp256r1",
            "printedName": "ecSecp256r1",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.KeyAlgorithm.Type) -> TAK.KeyAlgorithm",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "KeyAlgorithm",
                    "printedName": "TAK.KeyAlgorithm",
                    "usr": "s:3TAK12KeyAlgorithmO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.KeyAlgorithm.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "KeyAlgorithm",
                        "printedName": "TAK.KeyAlgorithm",
                        "usr": "s:3TAK12KeyAlgorithmO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK12KeyAlgorithmO11ecSecp256r1yA2CmF",
            "mangledName": "$s3TAK12KeyAlgorithmO11ecSecp256r1yA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Function",
            "name": "==",
            "printedName": "==(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "KeyAlgorithm",
                "printedName": "TAK.KeyAlgorithm",
                "usr": "s:3TAK12KeyAlgorithmO"
              },
              {
                "kind": "TypeNominal",
                "name": "KeyAlgorithm",
                "printedName": "TAK.KeyAlgorithm",
                "usr": "s:3TAK12KeyAlgorithmO"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAK12KeyAlgorithmO2eeoiySbAC_ACtFZ",
            "mangledName": "$s3TAK12KeyAlgorithmO2eeoiySbAC_ACtFZ",
            "moduleName": "TAK",
            "static": true,
            "implicit": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Var",
            "name": "hashValue",
            "printedName": "hashValue",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:3TAK12KeyAlgorithmO9hashValueSivp",
            "mangledName": "$s3TAK12KeyAlgorithmO9hashValueSivp",
            "moduleName": "TAK",
            "implicit": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:3TAK12KeyAlgorithmO9hashValueSivg",
                "mangledName": "$s3TAK12KeyAlgorithmO9hashValueSivg",
                "moduleName": "TAK",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "hash",
            "printedName": "hash(into:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Hasher",
                "printedName": "Swift.Hasher",
                "paramValueOwnership": "InOut",
                "usr": "s:s6HasherV"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAK12KeyAlgorithmO4hash4intoys6HasherVz_tF",
            "mangledName": "$s3TAK12KeyAlgorithmO4hash4intoys6HasherVz_tF",
            "moduleName": "TAK",
            "implicit": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Enum",
        "usr": "s:3TAK12KeyAlgorithmO",
        "mangledName": "$s3TAK12KeyAlgorithmO",
        "moduleName": "TAK",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "TAK",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "HashType",
        "printedName": "HashType",
        "children": [
          {
            "kind": "Var",
            "name": "none",
            "printedName": "none",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.HashType.Type) -> TAK.HashType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "HashType",
                    "printedName": "TAK.HashType",
                    "usr": "s:3TAK8HashTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.HashType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "HashType",
                        "printedName": "TAK.HashType",
                        "usr": "s:3TAK8HashTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK8HashTypeO4noneyA2CmF",
            "mangledName": "$s3TAK8HashTypeO4noneyA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "sha224",
            "printedName": "sha224",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.HashType.Type) -> TAK.HashType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "HashType",
                    "printedName": "TAK.HashType",
                    "usr": "s:3TAK8HashTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.HashType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "HashType",
                        "printedName": "TAK.HashType",
                        "usr": "s:3TAK8HashTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK8HashTypeO6sha224yA2CmF",
            "mangledName": "$s3TAK8HashTypeO6sha224yA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "sha256",
            "printedName": "sha256",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.HashType.Type) -> TAK.HashType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "HashType",
                    "printedName": "TAK.HashType",
                    "usr": "s:3TAK8HashTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.HashType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "HashType",
                        "printedName": "TAK.HashType",
                        "usr": "s:3TAK8HashTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK8HashTypeO6sha256yA2CmF",
            "mangledName": "$s3TAK8HashTypeO6sha256yA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "sha384",
            "printedName": "sha384",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.HashType.Type) -> TAK.HashType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "HashType",
                    "printedName": "TAK.HashType",
                    "usr": "s:3TAK8HashTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.HashType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "HashType",
                        "printedName": "TAK.HashType",
                        "usr": "s:3TAK8HashTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK8HashTypeO6sha384yA2CmF",
            "mangledName": "$s3TAK8HashTypeO6sha384yA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "sha512",
            "printedName": "sha512",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(TAK.HashType.Type) -> TAK.HashType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "HashType",
                    "printedName": "TAK.HashType",
                    "usr": "s:3TAK8HashTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "TAK.HashType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "HashType",
                        "printedName": "TAK.HashType",
                        "usr": "s:3TAK8HashTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:3TAK8HashTypeO6sha512yA2CmF",
            "mangledName": "$s3TAK8HashTypeO6sha512yA2CmF",
            "moduleName": "TAK",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Function",
            "name": "==",
            "printedName": "==(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "HashType",
                "printedName": "TAK.HashType",
                "usr": "s:3TAK8HashTypeO"
              },
              {
                "kind": "TypeNominal",
                "name": "HashType",
                "printedName": "TAK.HashType",
                "usr": "s:3TAK8HashTypeO"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAK8HashTypeO2eeoiySbAC_ACtFZ",
            "mangledName": "$s3TAK8HashTypeO2eeoiySbAC_ACtFZ",
            "moduleName": "TAK",
            "static": true,
            "implicit": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Var",
            "name": "hashValue",
            "printedName": "hashValue",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:3TAK8HashTypeO9hashValueSivp",
            "mangledName": "$s3TAK8HashTypeO9hashValueSivp",
            "moduleName": "TAK",
            "implicit": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:3TAK8HashTypeO9hashValueSivg",
                "mangledName": "$s3TAK8HashTypeO9hashValueSivg",
                "moduleName": "TAK",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "hash",
            "printedName": "hash(into:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Hasher",
                "printedName": "Swift.Hasher",
                "paramValueOwnership": "InOut",
                "usr": "s:s6HasherV"
              }
            ],
            "declKind": "Func",
            "usr": "s:3TAK8HashTypeO4hash4intoys6HasherVz_tF",
            "mangledName": "$s3TAK8HashTypeO4hash4intoys6HasherVz_tF",
            "moduleName": "TAK",
            "implicit": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Enum",
        "usr": "s:3TAK8HashTypeO",
        "mangledName": "$s3TAK8HashTypeO",
        "moduleName": "TAK",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          }
        ]
      }
    ],
    "json_format_version": 8
  },
  "ConstValues": [
    {
      "filePath": "\/Users\/jenkins\/workspace\/workspace\/tak-build-service-ios-sdk_new\/TAK\/KeyInfo.swift",
      "kind": "StringLiteral",
      "offset": 167,
      "length": 7,
      "value": "\"TAK.KeyInfo\""
    },
    {
      "filePath": "\/Users\/jenkins\/workspace\/workspace\/tak-build-service-ios-sdk_new\/TAK\/RegisterResponse.swift",
      "kind": "StringLiteral",
      "offset": 195,
      "length": 16,
      "value": "\"TAK.RegisterResponse\""
    },
    {
      "filePath": "\/Users\/jenkins\/workspace\/workspace\/tak-build-service-ios-sdk_new\/TAK\/TAK.swift",
      "kind": "IntegerLiteral",
      "offset": 28887,
      "length": 5,
      "value": "30000"
    },
    {
      "filePath": "\/Users\/jenkins\/workspace\/workspace\/tak-build-service-ios-sdk_new\/TAK\/TAK.swift",
      "kind": "IntegerLiteral",
      "offset": 31256,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/jenkins\/workspace\/workspace\/tak-build-service-ios-sdk_new\/TAK\/WrappedKey.swift",
      "kind": "StringLiteral",
      "offset": 155,
      "length": 10,
      "value": "\"TAK.WrappedKey\""
    },
    {
      "filePath": "\/Users\/jenkins\/workspace\/workspace\/tak-build-service-ios-sdk_new\/TAK\/CheckIntegrityResponse.swift",
      "kind": "StringLiteral",
      "offset": 198,
      "length": 22,
      "value": "\"TAK.CheckIntegrityResponse\""
    },
    {
      "filePath": "\/Users\/jenkins\/workspace\/workspace\/tak-build-service-ios-sdk_new\/TAK\/EncryptionOutput.swift",
      "kind": "StringLiteral",
      "offset": 270,
      "length": 16,
      "value": "\"TAK.EncryptionOutput\""
    }
  ]
}